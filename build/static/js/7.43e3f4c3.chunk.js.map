{"version":3,"sources":["components/ui/form/InputField.jsx","views/home/home.jss.jsx","components/ui/FullPageModal/index.jsx","components/ui/form/SelectField.jsx","views/home/AddEditTodoForm.jsx","views/home/TodoTable.jsx","views/home/index.jsx"],"names":["InputField","field","form","touched","errors","props","error","name","className","makeStyles","theme","btn","margin","spacing","extendedIcon","marginRight","useStyles","paper","backgroundColor","palette","background","padding","height","FullPageModal","title","open","handleClose","children","classes","Modal","onClose","Grid","container","direction","item","xs","justify","alignItems","Typography","component","variant","IconButton","onClick","_","SelectField","option_list","inputLabel","useRef","useState","labelWidth","setLabelWidth","React","useEffect","current","offsetWidth","FormControl","style","width","InputLabel","ref","label","Select","map","index","MenuItem","key","value","AddEditSchema","Yup","shape","taskName","required","priority","startDate","endDate","test","a","this","parent","Date","getTime","comments","PRIORITY_OPTIONS","AddEditTodoForm","isLoggedIn","user","initValues","isEditForm","useContext","TodoContext","addTodoInList","editTodoInList","addTodoForGuest","editTodoForGuest","initialValues","userID","_id","validationSchema","onSubmit","values","action","token","id","setSubmitting","isValid","isSubmitting","handleSubmit","handleChange","handleBlur","noValidate","fullWidth","type","onChange","onBlur","autoFocus","defaultValue","inputProps","max","InputLabelProps","shrink","min","disabled","Button","color","TodoTable","editCurrentTodo","editCurrentTodoForGuest","todoList","todoLoader","getTodosList","deleteCurrentTodo","getTodoListForGuest","deleteTodoForGuest","columns","Header","accessor","sortable","Cell","data","moment","format","original","isMounted","loading","defaultPageSize","noDataText","Home","useHomeStyles","Auth","UserContext","openTodoModal","setOpenTodoModal","isEdit","setIsEdit","editTodoObj","setEditTodoObj","closeModal","Container","maxWidth"],"mappings":"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","file":"static/js/7.43e3f4c3.chunk.js","sourcesContent":["import React from \"react\";\n\n// Material UI\nimport TextField from \"@material-ui/core/TextField\";\n\n// Custom input field\nconst InputField = ({ field, form: { touched, errors }, ...props }) => {\n  return (\n    <>\n      <TextField\n        {...field}\n        {...props}\n        error={errors[field.name] && touched[field.name]}\n      />\n      <div className=\"h-16 text-error\">\n        {errors[field.name] && touched[field.name] ? errors[field.name] : \"\"}\n      </div>\n    </>\n  );\n};\n\nexport default InputField;\n","// Material UI\nimport { makeStyles } from '@material-ui/core/styles';\n\n// JSS\nexport default makeStyles(theme => ({\n  btn: {\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));","import React from \"react\";\n\n// Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Modal from \"@material-ui/core/Modal\";\n\n// Material Icon\nimport CloseIcon from \"@material-ui/icons/Close\";\n\n// JSS\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 4, 3),\n    margin: 'auto',\n    height: '100%'\n  }\n}));\n\n// Full page popup\nconst FullPageModal = ({ title, open, handleClose, children }) => {\n  const classes = useStyles();\n\n  return (\n    <Modal open={open} onClose={handleClose}>\n      <div className={classes.paper}>\n        <Grid container direction=\"column\">\n          <Grid item xs={12}>\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item>\n                <Typography component=\"h1\" variant=\"h5\">\n                  {title}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <IconButton onClick={_ => handleClose()}>\n                  <CloseIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            {children}\n          </Grid>\n        </Grid>\n      </div>\n    </Modal>\n  );\n};\n\nexport default FullPageModal;\n","import React, { useRef, useState } from \"react\";\n\n// Material UI\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\n// Custom option field\nconst SelectField = ({\n  field,\n  form: { touched, errors },\n  option_list,\n  ...props\n}) => {\n  const inputLabel = useRef(null);\n  const [labelWidth, setLabelWidth] = useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  return (\n    <FormControl variant={props.variant} margin={props.margin} style={{ width: \"100%\" }}>\n      <InputLabel ref={inputLabel}>{props.label}</InputLabel>\n      <Select\n        labelWidth={labelWidth}\n        error={errors[field.name] && touched[field.name]}\n        {...field}\n      >\n        {option_list.map((item, index) => (\n          <MenuItem key={index} value={item.value}>\n            {item.name}\n          </MenuItem>\n        ))}\n      </Select>\n      <div className=\"h-16 text-error\">\n        {errors[field.name] && touched[field.name] ? errors[field.name] : \"\"}\n      </div>\n    </FormControl>\n  );\n};\n\nexport default SelectField;\n","import React, { useContext } from \"react\";\n\n// Form\nimport { Formik, Field } from \"formik\";\nimport * as Yup from \"yup\"; // For form validation\n\n// UI components\nimport InputField from \"../../components/ui/form/InputField\";\nimport SelectField from \"../../components/ui/form/SelectField\";\n\n// Material UI\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\n// Context\nimport { TodoContext } from \"../../context/todos.context\";\n\n// validation schema\nconst AddEditSchema = Yup.object().shape({\n  taskName: Yup.string()\n    .required(\"The task name field is required\"),\n  priority: Yup.string().required(\"The priority field is required\"),\n  startDate: Yup.string().required(\"The start date field is required\"),\n  endDate: Yup.string()\n    .required(\"The end date field is required\")\n    .test(\n      \"start-end-date-validation\",\n      \"End date should be after or on start date.\",\n      async function(value) {\n        if (this.parent.startDate) {\n          return (\n            new Date(this.parent.startDate).getTime() <=\n            new Date(value).getTime()\n          );\n        }\n        return false;\n      }\n    ),\n  comments: Yup.string().required(\"The comments field is required\")\n});\n\n// Priority options\nconst PRIORITY_OPTIONS = [\n  {\n    value: \"low\",\n    name: \"Low\"\n  },\n  {\n    value: \"medium\",\n    name: \"Medium\"\n  },\n  {\n    value: \"high\",\n    name: \"High\"\n  }\n];\n\nconst AddEditTodoForm = ({\n  isLoggedIn,\n  user,\n  initValues,\n  isEditForm,\n  handleClose\n}) => {\n  const {\n    addTodoInList,\n    editTodoInList,\n    addTodoForGuest,\n    editTodoForGuest\n  } = useContext(TodoContext);\n\n  return (\n    <Grid container justify=\"center\" alignItems=\"center\">\n      <Grid item xs={12}>\n        <Formik\n          initialValues={{\n            userID: isLoggedIn ? user._id : \"guest\",\n            taskName: isEditForm ? initValues.taskName : \"\",\n            priority: isEditForm ? initValues.priority : \"\",\n            startDate: isEditForm ? initValues.startDate : \"\",\n            endDate: isEditForm ? initValues.endDate : \"\",\n            comments: isEditForm ? initValues.comments : \"\"\n          }}\n          validationSchema={AddEditSchema}\n          onSubmit={async (values, action) => {\n            if (isLoggedIn) {\n              if (isEditForm) {\n                const editted = await editTodoInList(\n                  user ? user._id : \"\",\n                  initValues._id,\n                  user ? user.token : \"\",\n                  values\n                );\n\n                if (editted) {\n                  handleClose();\n                }\n              } else {\n                const added = await addTodoInList(\n                  user ? user.token : \"\",\n                  user?user._id:\"\",\n                  values\n                );\n\n                if (added) {\n                  handleClose();\n                }\n              }\n            } else {\n              if (isEditForm) {\n                editTodoForGuest(initValues.id, values);\n              } else {\n                addTodoForGuest(values);\n              }\n              handleClose();\n            }\n\n            action.setSubmitting(false);\n          }}\n        >\n          {({\n            isValid,\n            isSubmitting,\n            handleSubmit,\n            values,\n            touched,\n            handleChange,\n            handleBlur\n          }) => (\n            <form onSubmit={handleSubmit} noValidate>\n              <Field\n                margin=\"normal\"\n                fullWidth\n                type=\"string\"\n                name=\"taskName\"\n                label=\"Task Name\"\n                touched={touched}\n                component={InputField}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.taskName}\n                variant=\"outlined\"\n                autoFocus\n              />\n\n              <Field\n                margin=\"normal\"\n                fullWidth\n                name=\"priority\"\n                label=\"Priority\"\n                touched={touched}\n                component={SelectField}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                defaultValue={values.priority}\n                variant=\"outlined\"\n                option_list={PRIORITY_OPTIONS}\n              />\n\n              <Field\n                margin=\"normal\"\n                fullWidth\n                type=\"date\"\n                name=\"startDate\"\n                label=\"Start Date\"\n                touched={touched}\n                component={InputField}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.startDate}\n                variant=\"outlined\"\n                inputProps={{ max: \"2100-01-01\" }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n\n              <Field\n                margin=\"normal\"\n                fullWidth\n                type=\"date\"\n                name=\"endDate\"\n                label=\"End Date\"\n                touched={touched}\n                component={InputField}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.endDate}\n                variant=\"outlined\"\n                inputProps={{ min: values.startDate, max: \"2100-01-01\" }}\n                disabled={!values.startDate}\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n\n              <Field\n                margin=\"normal\"\n                fullWidth\n                type=\"string\"\n                name=\"comments\"\n                label=\"Comments\"\n                touched={touched}\n                component={InputField}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.comments}\n                variant=\"outlined\"\n              />\n\n              <Button\n                disabled={isSubmitting || !isValid}\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"m-15\"\n              >\n                {isSubmitting ? \"Loading ...\" : \"Submit\"}\n              </Button>\n            </form>\n          )}\n        </Formik>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AddEditTodoForm;\n","import React, { useContext, useRef, useEffect } from \"react\";\n\n// Material UI\nimport IconButton from \"@material-ui/core/IconButton\";\n\n// Material Icons\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\n// To display table\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\n// For date and time\nimport moment from 'moment';\n\n// Context\nimport { TodoContext } from \"../../context/todos.context\";\n\nconst TodoTable = ({\n  user,\n  isLoggedIn,\n  editCurrentTodo,\n  editCurrentTodoForGuest\n}) => {\n  // Context api\n  const {\n    todoList,\n    todoLoader,\n    getTodosList,\n    deleteCurrentTodo,\n    getTodoListForGuest,\n    deleteTodoForGuest\n  } = useContext(TodoContext);\n\n  // Table columns\n  const columns = [\n    {\n      Header: \"Task Name\",\n      accessor: \"taskName\",\n      sortable: false,\n    },\n    {\n      Header: \"Priority\",\n      accessor: \"priority\",\n      sortable: false,\n    },\n    {\n      Header: \"Start Date\",\n      accessor: \"startDate\",\n      sortable: false,\n      Cell: data => moment(data.value).format('Do MMM YYYY')\n    },\n    {\n      Header: \"End Date\",\n      accessor: \"endDate\",\n      sortable: false,\n      Cell: data => moment(data.value).format('Do MMM YYYY')\n    },\n    {\n      Header: \"Comments\",\n      accessor: \"comments\",\n      sortable: false,\n    },\n    {\n      Header: \"Delete\",\n      Cell: data => {\n        return (\n          <IconButton\n            onClick={_ =>\n              isLoggedIn\n                ? deleteCurrentTodo(\n                    user._id,\n                    data.original._id,\n                    data.original.taskName,\n                    user.token\n                  )\n                : deleteTodoForGuest(data.index)\n            }\n          >\n            <DeleteIcon color=\"secondary\" />\n          </IconButton>\n        );\n      }\n    },\n    {\n      Header: \"Edit\",\n      Cell: data => {\n        return (\n          <IconButton\n            onClick={_ =>\n              isLoggedIn\n                ? editCurrentTodo(data.original)\n                : editCurrentTodoForGuest(data.index, data.original)\n            }\n          >\n            <EditIcon color=\"secondary\" />\n          </IconButton>\n        );\n      }\n    }\n  ];\n\n  // Used ref to create comonentDidMount Effect\n  const isMounted = useRef(true);\n\n  useEffect(() => {\n    // Used ref to create comonentDidMount Effect\n    if (isMounted.current) {\n      // Checking for it is guest user or logged in user\n      if (isLoggedIn) {\n        getTodosList(user ? user._id : \"\", user ? user.token : \"\");\n      } else {\n        getTodoListForGuest();\n      }\n      isMounted.current = false;\n    }\n  }, [user, getTodosList, isLoggedIn, getTodoListForGuest]);\n\n  return (\n    <ReactTable\n      data={todoList}\n      loading={todoLoader}\n      columns={columns}\n      defaultPageSize={10}\n      className=\"mb-15\"\n      noDataText=\"No Todo found\"\n    />\n  );\n};\n\nexport default TodoTable;\n","import React, { useState, useContext } from \"react\";\n\n// Material UI\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\n// Material UI icons\nimport AddIcon from \"@material-ui/icons/AddCircle\";\n\n// JSS\nimport useHomeStyles from \"./home.jss\";\n\n// Popup component\nimport FullPageModal from \"../../components/ui/FullPageModal\";\n\n// Create todo form\nimport AddEditTodoForm from \"./AddEditTodoForm\";\n\n// Context\nimport { UserContext } from \"../../context/auth.context\";\n\n// Table\nimport TodoTable from \"./TodoTable\";\n\nconst Home = () => {\n  // JSS style\n  const classes = useHomeStyles();\n\n  // Context api\n  const Auth = useContext(UserContext);\n\n  // Local state\n  const [openTodoModal, setOpenTodoModal] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [editTodoObj, setEditTodoObj] = useState(null);\n\n  /**\n   * To edit todo \n   * @param {*} data - todo task data\n   */\n  const editCurrentTodo = data => {\n    setIsEdit(true);\n    setEditTodoObj(data);\n    setOpenTodoModal(true);\n  };\n\n  /**\n   * To edit guest user todo\n   * @param {*} id - todo index from table\n   * @param {*} data - todo task data\n   */\n  const editCurrentTodoForGuest = (id, data) => {\n    data.id = id\n    setIsEdit(true);\n    setEditTodoObj(data);\n    setOpenTodoModal(true);\n  };\n\n  /**\n   * Close open modal\n   */\n  const closeModal = _ => {\n    setIsEdit(false);\n    setOpenTodoModal(false);\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container direction=\"column\">\n        {/* First section */}\n        <Grid item xs={12}>\n          <Button\n            onClick={_ => setOpenTodoModal(true)}\n            className={`${classes.btn} capitalize`}\n          >\n            <AddIcon color=\"secondary\" className={classes.extendedIcon} />\n            Add Todo\n          </Button>\n        </Grid>\n        {/* Second section */}\n        <Grid item xs={12}>\n          {/* Todo table component */}\n          <TodoTable\n            editCurrentTodo={editCurrentTodo}\n            editCurrentTodoForGuest={editCurrentTodoForGuest}\n            user={Auth.user}\n            isLoggedIn={Auth.isLoggedIn}\n          />\n        </Grid>\n      </Grid>\n      {/* Full page popup component */}\n      <FullPageModal\n        title={\"Create Todo\"}\n        open={openTodoModal}\n        handleClose={_ => closeModal()}\n      >\n        {/* Add edit form component */}\n        <AddEditTodoForm\n          user={Auth.user}\n          isLoggedIn={Auth.isLoggedIn}\n          isEditForm={isEdit}\n          initValues={editTodoObj}\n          handleClose={_ => closeModal()}\n        />\n      </FullPageModal>\n    </Container>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}