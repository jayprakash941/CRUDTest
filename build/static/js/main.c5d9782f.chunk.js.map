{"version":3,"sources":["config/index.js","context/auth.context.js","context/todos.context.js","assets/svg/404.svg","utils/index.js","components/navigation/Header.jsx","components/navigation/PublicRouter.jsx","routes/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["ROOT_API","toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","EMAIL_REG_EXP","localStorageUser","JSON","parse","localStorage","getItem","initialState","authLoader","isLoggedIn","user","AUTH_REDUCER_TYPE","reducer","state","type","payload","UserContext","createContext","UserContextProvider","children","useReducer","authState","dispatch","registerUser","userObject","a","axios","post","then","regResponse","message","data","toastSuccess","catch","err","toastError","response","loginUser","loginResponse","dbUserObject","userObj","_id","user_id","name","email","token","setItem","stringify","Provider","value","logoutUser","todoLoader","todoList","TODO_REDUCER_TYPE","TodoContext","TodoContextProvider","todoState","getTodosList","userID","get","headers","todosListRes","task","status","toastInfo","addTodoInList","todoObj","todoRes","newTodosList","push","taskName","editTodoInList","put","todoIndex","findIndex","todo","deleteCurrentTodo","window","confirm","delete","_","splice","clearData","getTodoListForGuest","todoListLocalStorage","addTodoForGuest","editTodoForGuest","id","deleteTodoForGuest","module","exports","toast","success","info","error","Header","useContext","AppBar","Container","maxWidth","Toolbar","Typography","className","variant","to","Avatar","color","charAt","toUpperCase","Button","component","NavLink","PublicRouter","Component","rest","render","props","Signin","lazy","Signup","Signout","Home","Loader","PageNotFound","style","backgroundImage","NotFoundSVG","Routes","fallback","path","exact","App","theme","createMuiTheme","palette","primary","light","BlueGrey","main","dark","secondary","LightGreen","ThemeProvider","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qGAAA,sGACO,IAAMA,EAAW,4BAGXC,EAAc,CACzBC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,GAIAC,EAAgB,iI,0wBCF7B,IAAMC,EAAmBC,KAAKC,MAAMC,aAAaC,QAAQ,cAGnDC,EAAe,CACnBC,YAAY,EACZC,WAAiC,OAArBP,EACZQ,KAA2B,OAArBR,EAA4BA,EAAmB,MAIjDS,EACQ,aADRA,EAEM,WAFNA,EAGS,cAHTA,EAIO,YAJPA,EAKS,cAITC,EAAU,SAACC,EAAD,GAA+B,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC9B,OAAQD,GACN,KAAKH,EACH,OAAO,EAAP,GAAYE,EAAZ,CAAmBL,YAAY,IACjC,KAAKG,EACH,OAAO,EAAP,GAAYE,EAAZ,CAAmBL,YAAY,IACjC,KAAKG,EACH,OAAO,EAAP,GAAYE,EAAZ,CAAmBH,KAAMK,EAASP,YAAY,EAAOC,YAAY,IACnE,KAAKE,EAEL,KAAKA,EACH,OAAO,EAAP,GAAYE,EAAZ,CAAmBH,KAAM,KAAMF,YAAY,EAAOC,YAAY,IAChE,QACE,OAAOI,IAKAG,EAAcC,0BAGdC,EAAsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAErBC,qBAAWR,EAASL,GAFC,mBAE5Cc,EAF4C,KAEjCC,EAFiC,KAQ7CC,EAAY,uCAAG,WAAMC,GAAN,SAAAC,EAAA,6DACnBH,EAAS,CACPR,KAAMH,IAFW,kBAKZe,IACJC,KADI,UACIlC,IADJ,gBAC4B+B,GAChCI,MAAK,SAAAC,GACJ,IAAMC,EAAUD,EAAYE,KAAKD,QAOjC,OALAE,YAAaF,GAEbR,EAAS,CACPR,KAAMH,IAEDmB,KAERG,OAAM,SAAAC,GASL,OARAZ,EAAS,CACPR,KAAMH,IAERwB,YACED,EAAIE,SACAF,EAAIE,SAASL,KAAKD,QAClB,4CAEC,MA1BQ,2CAAH,sDAkCZO,EAAS,uCAAG,WAAMb,GAAN,SAAAC,EAAA,6DAChBH,EAAS,CACPR,KAAMH,IAFQ,kBAITe,IACJC,KADI,UACIlC,IADJ,gBAC4B+B,GAChCI,MAAK,SAAAU,GACJ,IAAMC,EAAeD,EAAcP,KAAKA,KACxCC,YAAa,yBAEb,IAAMQ,EAAU,CACdC,IAAKF,EAAaG,QAClBC,KAAMJ,EAAaI,KACnBC,MAAOL,EAAaK,MACpBC,MAAON,EAAaM,OAQtB,OANAxC,aAAayC,QAAQ,YAAa3C,KAAK4C,UAAUP,IACjDlB,EAAS,CACPR,KAAMH,EACNI,QAASyB,KAGJ,KAERP,OAAM,SAAAC,GAUL,OATAZ,EAAS,CACPR,KAAMH,IAGRwB,YACED,EAAIE,SACAF,EAAIE,SAASL,KAAKD,QAClB,4CAEC,MAlCK,2CAAH,sDAiDf,OACE,kBAACd,EAAYgC,SAAb,CACEC,MAAK,KACA5B,EADA,CAEHE,aAAcA,EACdc,UAAWA,EACXa,WAda,WACjB7C,aAAayC,QAAQ,YAAa,MAClCxB,EAAS,CACPR,KAAMH,IAERqB,YAAa,8BAYVb,K,yvBC5IP,IAAMZ,EAAe,CACnB4C,YAAY,EACZC,SAAU,IAINC,EACQ,aADRA,EAES,cAFTA,EAGO,YAIPzC,EAAU,SAACC,EAAD,GAA+B,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC9B,OAAQD,GACN,KAAKuC,EACH,OAAO,EAAP,GAAYxC,EAAZ,CAAmBsC,YAAY,IACjC,KAAKE,EACH,OAAO,EAAP,GAAYxC,EAAZ,CAAmBuC,SAAUrC,EAASoC,YAAY,IACpD,KAAKE,EACH,OAAO,EAAP,GAAYxC,EAAZ,CAAmBsC,YAAY,IACjC,QACE,OAAOtC,IAKAyC,EAAcrC,0BAGdsC,EAAsB,SAAC,GAAkB,IAAhBpC,EAAe,EAAfA,SAAe,EAErBC,qBAAWR,EAASL,GAFC,mBAE5CiD,EAF4C,KAEjClC,EAFiC,KAiOnD,OACE,kBAACgC,EAAYN,SAAb,CACEC,MAAK,KACAO,EADA,CAEHC,aA5Ne,SAACC,EAAQb,GAI5B,OAHAvB,EAAS,CACPR,KAAMuC,IAED3B,IACJiC,IADI,UACGlE,IADH,iBACoBiE,GAAU,CACjCE,QAAS,CACP,eAAe,GAAf,OAAmBf,MAGtBjB,MAAK,SAAAiC,GAEJvC,EAAS,CACPR,KAAMuC,EACNtC,QAAS8C,EAAa9B,KAAK+B,KAAOD,EAAa9B,KAAK+B,KAAO,QAG9D7B,OAAM,SAAAC,GACDA,GAAOA,EAAIE,UAAYF,EAAIE,SAAS2B,QAAkC,MAAxB7B,EAAIE,SAAS2B,OAC7DC,YAAU9B,EAAIE,SAASL,KAAKD,SAE5BK,YAAW,2CAEbb,EAAS,CACPR,KAAMuC,QAqMRY,cA3LgB,SAACpB,EAAMa,EAAQQ,GAInC,OAHA5C,EAAS,CACPR,KAAMuC,IAED3B,IACJC,KADI,UACIlC,IADJ,iBACqBiE,GAAUQ,EAAS,CAC3CN,QAAS,CACP,eAAe,GAAf,OAAmBf,MAGtBjB,MAAK,SAAAuC,GACJ,IAAMC,EAAY,YAAOZ,EAAUJ,UAQnC,OAPAgB,EAAaC,KAAKF,EAAQpC,KAAK+B,MAC/BE,YAAU,IAAD,OAAKG,EAAQpC,KAAK+B,KAAKQ,SAAvB,yBACThD,EAAS,CACPR,KAAMuC,EACNtC,QAASqD,KAGJ,KAERnC,OAAM,SAAAC,GAKL,OAJAC,YAAW,2CACXb,EAAS,CACPR,KAAMuC,KAED,MAkKPkB,eAvJiB,SAACb,EAAQjB,EAAKI,EAAOqB,GAI1C,OAHA5C,EAAS,CACPR,KAAMuC,IAED3B,IACJ8C,IADI,UACG/E,IADH,iBACoBiE,EADpB,YAC8BjB,GAAOyB,EAAS,CACjDN,QAAS,CACP,eAAe,GAAf,OAAmBf,MAGtBjB,MAAK,SAAAuC,GACJ,IAAMC,EAAY,YAAOZ,EAAUJ,UAC7BqB,EAAYL,EAAaM,WAAU,SAAAC,GAAI,OAAIA,EAAKlC,MAAQA,KAS9D,OARAuB,YAAU,IAAD,OAAKG,EAAQpC,KAAK+B,KAAKQ,SAAvB,2BACTF,EAAaK,GAAaN,EAAQpC,KAAK+B,KAEvCxC,EAAS,CACPR,KAAMuC,EACNtC,QAASqD,KAGJ,KAERnC,OAAM,SAAAC,GAKL,OAJAC,YAAW,2CACXb,EAAS,CACPR,KAAMuC,KAED,MA4HPuB,kBAjHoB,SAAClB,EAAQjB,EAAK6B,EAAUzB,GAChD,GAAIgC,OAAOC,QAAP,2CAAmDR,EAAnD,MACF,OAAO5C,IACJqD,OADI,UACMtF,IADN,iBACuBiE,EADvB,YACiCjB,GAAO,CAC3CmB,QAAS,CACP,eAAe,GAAf,OAAmBf,MAGtBjB,MAAK,SAAAoD,GACJ,IAAMZ,EAAY,YAAOZ,EAAUJ,UAC7BqB,EAAYL,EAAaM,WAAU,SAAAC,GAAI,OAAIA,EAAKlC,MAAQA,KAS9D,OARAuB,YAAU,IAAD,OAAKI,EAAaK,GAAWH,SAA7B,2BACTF,EAAaa,OAAOR,EAAW,GAE/BnD,EAAS,CACPR,KAAMuC,EACNtC,QAASqD,KAGJ,KAERnC,OAAM,SAAAC,GAKL,OAJAC,YAAW,2CACXb,EAAS,CACPR,KAAMuC,KAED,MAwFT6B,UAhFY,WAChB5D,EAAS,CACPR,KAAMuC,EACNtC,QAAS,MA8EPoE,oBAvEsB,WAC1B,IAAMC,EAAuBjF,KAAKC,MAChCC,aAAaC,QAAQ,oBAGvBgB,EAAS,CACPR,KAAMuC,EACNtC,QAHwC,OAAzBqE,EAAgC,GAAKA,KAoElDC,gBAzDkB,SAAAnB,GACtBF,YAAU,IAAD,OAAKE,EAAQI,SAAb,yBACT,IAAMc,EAAuBjF,KAAKC,MAChCC,aAAaC,QAAQ,oBAEjB8C,EAAoC,OAAzBgC,EAAgC,GAAKA,EACtDhC,EAASiB,KAAKH,GACd7D,aAAayC,QAAQ,kBAAmB3C,KAAK4C,UAAUK,IACvD9B,EAAS,CACPR,KAAMuC,EACNtC,QAASqC,KAgDPkC,iBAvCmB,SAACC,EAAIrB,GAC5B,IAAME,EAAY,YAAOZ,EAAUJ,UACnCgB,EAAamB,GAAMrB,EACnBF,YAAU,IAAD,OAAKE,EAAQI,SAAb,2BACTjE,aAAayC,QAAQ,kBAAmB3C,KAAK4C,UAAUqB,IACvD9C,EAAS,CACPR,KAAMuC,EACNtC,QAASqD,KAiCPoB,mBAzBqB,SAAAD,GACzB,IAAMnB,EAAY,YAAOZ,EAAUJ,UAC/ByB,OAAOC,QAAP,2CAAmDV,EAAamB,GAAIjB,SAApE,QACFN,YAAU,IAAD,OAAKI,EAAamB,GAAIjB,SAAtB,2BACTF,EAAaa,OAAOM,EAAI,GACxBlF,aAAayC,QAAQ,kBAAmB3C,KAAK4C,UAAUqB,IACvD9C,EAAS,CACPR,KAAMuC,EACNtC,QAASqD,SAoBVjD,K,mBC1RPsE,EAAOC,QAAU,IAA0B,iC,wFCA3C,0HAMa1D,EAAe,SAACF,GAC3B6D,IAAMC,QAAQ9D,EAASpC,MAGZsE,EAAY,SAAClC,GACxB6D,IAAME,KAAK/D,EAASpC,MAOTyC,EAAa,SAACL,GACzB6D,IAAMG,MAAMhE,EAASpC,O,kKC6BRqG,EAhCA,WAAO,IAAD,EACUC,qBAAWhF,KAAhCN,EADW,EACXA,KAAMD,EADK,EACLA,WACZ,OACA,kBAACwF,EAAA,EAAD,CAAQtG,SAAS,UACf,kBAACuG,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,UAAU,SAASC,QAAQ,MACrC,kBAAC,IAAD,CAAMD,UAAU,kBAAkBE,GAAG,KAArC,aAED/F,EACC,oCACE,kBAACgG,EAAA,EAAD,CAAQC,MAAM,WAAWhG,EAAKkC,MAAM+D,OAAO,GAAGC,eAC9C,kBAACC,EAAA,EAAD,CAAQH,MAAM,UAAUF,GAAG,YAAYM,UAAWC,IAAST,UAAU,cAArE,WAKF,oCACE,kBAACO,EAAA,EAAD,CAAQH,MAAM,UAAUI,UAAWC,IAASP,GAAG,WAAWF,UAAU,cAApE,WAGA,kBAACO,EAAA,EAAD,CAAQH,MAAM,UAAUI,UAAWC,IAASP,GAAG,WAAWF,UAAU,cAApE,gB,QCfCU,EAbM,SAAC,GAA8C,IAAjCC,EAAgC,EAA3CH,UAAgCI,GAAW,EAArBrE,MAAqB,sCACzDpC,EAAeuF,qBAAWhF,KAA1BP,WAER,OACE,kBAAC,IAAD,iBACMyG,EADN,CAEEC,OAAQ,SAAAC,GAAK,OACX3G,EAAa,kBAAC,IAAD,CAAU+F,GAAG,MAAS,kBAACS,EAAcG,Q,iBCDpDC,EAASC,gBAAK,kBAAM,uDACpBC,EAASD,gBAAK,kBAAM,uDACpBE,EAAUF,gBAAK,kBAAM,iCAGrBG,EAAOH,gBAAK,kBAAM,8DAGlBI,EAAS,SAAA1C,GAAC,OACd,yBAAKsB,UAAU,qBACb,yBAAKA,UAAU,iBACb,8BACA,iCAMAqB,EAAe,SAAA3C,GAAC,OACpB,yBAAKsB,UAAU,iBAAiBsB,MAAO,CAAEC,gBAAgB,OAAD,OAASC,IAAT,OACtD,gDAqBWC,EAjBA,WACb,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAClB,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAcC,KAAK,WAAWnB,UAAWS,EAAQW,OAAO,IACxD,kBAAC,EAAD,CAAcD,KAAK,WAAWnB,UAAWO,EAAQa,OAAO,IACxD,kBAAC,IAAD,CAAOD,KAAK,YAAYnB,UAAWU,EAASU,OAAO,IACnD,kBAAC,IAAD,CAAOD,KAAK,IAAInB,UAAWW,EAAMS,OAAO,IACxC,kBAAC,IAAD,CAAOpB,UAAWa,Q,mECTbQ,EA1BH,WAEV,IAAMC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,MAAOC,IAAS,KAChBC,KAAMD,IAAS,KACfE,KAAMF,IAAS,MAEjBG,UAAW,CACTJ,MAAOK,IAAW,KAClBH,KAAMG,IAAW,KACjBF,KAAME,IAAW,MAEnB/H,KAAM,WAIV,OACE,kBAACgI,EAAA,EAAD,CAAeV,MAAOA,GACpB,kBAAC,EAAD,MACA,kBAAC,IAAD,QCvBcW,QACW,cAA7BlE,OAAOmE,SAASC,UAEe,UAA7BpE,OAAOmE,SAASC,UAEhBpE,OAAOmE,SAASC,SAASC,MACvB,2D,YCRNC,IAAShC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJiC,SAASC,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5H,MAAK,SAAA6H,GACjCA,EAAaC,kB","file":"static/js/main.c5d9782f.chunk.js","sourcesContent":["// Root api for getting any data\nexport const ROOT_API = 'http://localhost:8000/api';\n\n// Configuration of toast popuo\nexport const toastConfig = {\n  position: \"top-right\",\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true\n};\n\n// Email Regex\nexport const EMAIL_REG_EXP = /^[A-Za-z]{1,}[A-Za-z0-9]{0,}[.]{0,1}[A-Za-z0-9]{1,}[.]{0,1}[A-Za-z0-9]{1,}@[A-Za-z]{2,}[.]{1}[A-za-z]{2,3}[.]{0,1}[a-z]{0,2}$/;\n\n// Character Regex\nexport const ONLY_CHAR_REG_EXP = /^[a-zA-Z]+$/;\n","import React, { createContext, useReducer } from \"react\";\n\n// for api call\nimport axios from \"axios\";\n\n// Config file\nimport { ROOT_API } from \"../config\";\n\n// Utility functions\nimport { toastError, toastSuccess } from \"../utils\";\n\n// Getting user data from local storage\nconst localStorageUser = JSON.parse(localStorage.getItem(\"todo_user\"));\n\n// Initial state for reducer\nconst initialState = {\n  authLoader: false,\n  isLoggedIn: localStorageUser !== null ? true : false,\n  user: localStorageUser !== null ? localStorageUser : null\n};\n\n// Reducer constants\nconst AUTH_REDUCER_TYPE = {\n  AUTH_START: \"AUTH_START\",\n  AUTH_END: \"AUTH_END\",\n  AUTH_SUCESS: \"AUTH_SUCESS\",\n  AUTH_FAIL: \"AUTH_FAIL\",\n  LOGOUT_USER: \"LOGOUT_USER\"\n};\n\n// Auth reducer\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case AUTH_REDUCER_TYPE.AUTH_START:\n      return { ...state, authLoader: true };\n    case AUTH_REDUCER_TYPE.AUTH_END:\n      return { ...state, authLoader: false };\n    case AUTH_REDUCER_TYPE.AUTH_SUCESS:\n      return { ...state, user: payload, authLoader: false, isLoggedIn: true };\n    case AUTH_REDUCER_TYPE.AUTH_FAIL:\n      return { ...state, user: null, authLoader: false, isLoggedIn: false };\n    case AUTH_REDUCER_TYPE.LOGOUT_USER:\n      return { ...state, user: null, authLoader: false, isLoggedIn: false };\n    default:\n      return state;\n  }\n};\n\n// User context\nexport const UserContext = createContext();\n\n// User Context provider\nexport const UserContextProvider = ({ children }) => {\n  // Auth state and reducer\n  const [authState, dispatch] = useReducer(reducer, initialState);\n\n  /**\n   * To register user\n   * @param {*} userObject - Sign up form object\n   */\n  const registerUser = async userObject => {\n    dispatch({\n      type: AUTH_REDUCER_TYPE.AUTH_START\n    });\n\n    return axios\n      .post(`${ROOT_API}/user/signup`, userObject)\n      .then(regResponse => {\n        const message = regResponse.data.message;\n\n        toastSuccess(message);\n\n        dispatch({\n          type: AUTH_REDUCER_TYPE.AUTH_END\n        });\n        return message;\n      })\n      .catch(err => {\n        dispatch({\n          type: AUTH_REDUCER_TYPE.AUTH_FAIL\n        });\n        toastError(\n          err.response\n            ? err.response.data.message\n            : \"Something went wrong! please try again.\"\n        );\n        return false;\n      });\n  };\n\n  /**\n   * For login\n   * @param {*} userObject - Sign in form object\n   */\n  const loginUser = async userObject => {\n    dispatch({\n      type: AUTH_REDUCER_TYPE.AUTH_START\n    });\n    return axios\n      .post(`${ROOT_API}/user/loging`, userObject)\n      .then(loginResponse => {\n        const dbUserObject = loginResponse.data.data;\n        toastSuccess(\"Logged in sucessfully\");\n\n        const userObj = {\n          _id: dbUserObject.user_id,\n          name: dbUserObject.name,\n          email: dbUserObject.email,\n          token: dbUserObject.token\n        };\n        localStorage.setItem(\"todo_user\", JSON.stringify(userObj));\n        dispatch({\n          type: AUTH_REDUCER_TYPE.AUTH_SUCESS,\n          payload: userObj\n        });\n\n        return true;\n      })\n      .catch(err => {\n        dispatch({\n          type: AUTH_REDUCER_TYPE.AUTH_FAIL\n        });\n\n        toastError(\n          err.response\n            ? err.response.data.message\n            : \"Something went wrong! please try again.\"\n        );\n        return false;\n      });\n  };\n\n  /**\n   * Clear user data when this is called\n   */\n  const logoutUser = () => {\n    localStorage.setItem(\"todo_user\", null);\n    dispatch({\n      type: AUTH_REDUCER_TYPE.LOGOUT_USER\n    });\n    toastSuccess(\"Logged out sucessfully\");\n  };\n\n  return (\n    <UserContext.Provider\n      value={{\n        ...authState,\n        registerUser: registerUser,\n        loginUser: loginUser,\n        logoutUser: logoutUser\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n","import React, { createContext, useReducer } from \"react\";\n\n// for api call\nimport axios from \"axios\";\n\n// Config file\nimport { ROOT_API } from \"../config\";\n\n// Utility functions\nimport { toastError, toastInfo } from \"../utils\";\n\n// Initial state for reducer\nconst initialState = {\n  todoLoader: false,\n  todoList: []\n};\n\n// Reducer constants\nconst TODO_REDUCER_TYPE = {\n  TODO_START: \"TODO_START\",\n  TODO_SUCESS: \"TODO_SUCESS\",\n  TODO_FAIL: \"TODO_FAIL\"\n};\n\n// Todo reducer\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case TODO_REDUCER_TYPE.TODO_START:\n      return { ...state, todoLoader: true };\n    case TODO_REDUCER_TYPE.TODO_SUCESS:\n      return { ...state, todoList: payload, todoLoader: false };\n    case TODO_REDUCER_TYPE.TODO_FAIL:\n      return { ...state, todoLoader: false };\n    default:\n      return state;\n  }\n};\n\n// Todo context\nexport const TodoContext = createContext();\n\n// Todo Context Provider\nexport const TodoContextProvider = ({ children }) => {\n  // todo state and reducer\n  const [todoState, dispatch] = useReducer(reducer, initialState);\n\n  /**\n   * To get todo list of logged in user\n   * @param {*} userID - Logged in user ID\n   * @param {*} token - Logged in user token\n   */\n  const getTodosList = (userID, token) => {\n    dispatch({\n      type: TODO_REDUCER_TYPE.TODO_START\n    });\n    return axios\n      .get(`${ROOT_API}/task/${userID}`, {\n        headers: {\n          'x-auth-token': `${token}`\n        }\n      })\n      .then(todosListRes => {\n        debugger\n        dispatch({\n          type: TODO_REDUCER_TYPE.TODO_SUCESS,\n          payload: todosListRes.data.task ? todosListRes.data.task : []\n        });\n      })\n      .catch(err => {\n        if (err && err.response && err.response.status && err.response.status === 404) {\n          toastInfo(err.response.data.message);\n        } else {\n          toastError(\"Something went wrong! please try again.\");\n        }\n        dispatch({\n          type: TODO_REDUCER_TYPE.TODO_FAIL\n        });\n      });\n  };\n\n  /**\n   * To create new todo task\n   * @param {*} token - Logged in user token\n   * @param {*} todoObj - Todo task object\n   */\n  const addTodoInList = (token,userID, todoObj) => {\n    dispatch({\n      type: TODO_REDUCER_TYPE.TODO_START\n    });\n    return axios\n      .post(`${ROOT_API}/task/${userID}`, todoObj, {\n        headers: {\n          'x-auth-token': `${token}`\n        }\n      })\n      .then(todoRes => {\n        const newTodosList = [...todoState.todoList];\n        newTodosList.push(todoRes.data.task);\n        toastInfo(`\"${todoRes.data.task.taskName}\" added successfully`);\n        dispatch({\n          type: TODO_REDUCER_TYPE.TODO_SUCESS,\n          payload: newTodosList\n        });\n\n        return true;\n      })\n      .catch(err => {\n        toastError(\"Something went wrong! please try again.\");\n        dispatch({\n          type: TODO_REDUCER_TYPE.TODO_FAIL\n        });\n        return false;\n      });\n  };\n\n  /**\n   * To edit selected todo task\n   * @param {*} userID - Logged in user ID\n   * @param {*} _id - id of selected todo task\n   * @param {*} token - Logged in user token\n   * @param {*} todoObj - Todo task object\n   */\n  const editTodoInList = (userID, _id, token, todoObj) => {\n    dispatch({\n      type: TODO_REDUCER_TYPE.TODO_START\n    });\n    return axios\n      .put(`${ROOT_API}/task/${userID}/${_id}`, todoObj, {\n        headers: {\n          'x-auth-token': `${token}`\n        }\n      })\n      .then(todoRes => {\n        const newTodosList = [...todoState.todoList];\n        const todoIndex = newTodosList.findIndex(todo => todo._id === _id);\n        toastInfo(`\"${todoRes.data.task.taskName}\" updated successfully`);\n        newTodosList[todoIndex] = todoRes.data.task;\n\n        dispatch({\n          type: TODO_REDUCER_TYPE.TODO_SUCESS,\n          payload: newTodosList\n        });\n\n        return true;\n      })\n      .catch(err => {\n        toastError(\"Something went wrong! please try again.\");\n        dispatch({\n          type: TODO_REDUCER_TYPE.TODO_FAIL\n        });\n        return false;\n      });\n  };\n\n  /**\n   * To delete task\n   * @param {*} userID - Logged in user ID\n   * @param {*} _id - id of selected todo task\n   * @param {*} taskName - name of the task\n   * @param {*} token - Logged in user token\n   */\n  const deleteCurrentTodo = (userID, _id, taskName, token) => {\n    if (window.confirm(`Are you sure you want to remove \"${taskName}\"`)) {\n      return axios\n        .delete(`${ROOT_API}/task/${userID}/${_id}`, {\n          headers: {\n            'x-auth-token': `${token}`\n          }\n        })\n        .then(_ => {\n          const newTodosList = [...todoState.todoList];\n          const todoIndex = newTodosList.findIndex(todo => todo._id === _id);\n          toastInfo(`\"${newTodosList[todoIndex].taskName}\" deleted successfully`);\n          newTodosList.splice(todoIndex, 1);\n\n          dispatch({\n            type: TODO_REDUCER_TYPE.TODO_SUCESS,\n            payload: newTodosList\n          });\n\n          return true;\n        })\n        .catch(err => {\n          toastError(\"Something went wrong! please try again.\");\n          dispatch({\n            type: TODO_REDUCER_TYPE.TODO_FAIL\n          });\n          return false;\n        });\n    }\n  };\n\n  /**\n   * To clear data of current todo list\n   */\n  const clearData = () => {\n    dispatch({\n      type: TODO_REDUCER_TYPE.TODO_SUCESS,\n      payload: []\n    });\n  };\n\n  /**\n   * To get todo list from local storage\n   */\n  const getTodoListForGuest = () => {\n    const todoListLocalStorage = JSON.parse(\n      localStorage.getItem(\"todo_guest_list\")\n    );\n    const todoList = todoListLocalStorage === null ? [] : todoListLocalStorage;\n    dispatch({\n      type: TODO_REDUCER_TYPE.TODO_SUCESS,\n      payload: todoList\n    });\n  };\n\n  /**\n   * Add todo in list for guest user\n   * @param {*} todoObj - Todo task object\n   */\n  const addTodoForGuest = todoObj => {\n    toastInfo(`\"${todoObj.taskName}\" added successfully`)\n    const todoListLocalStorage = JSON.parse(\n      localStorage.getItem(\"todo_guest_list\")\n    );\n    const todoList = todoListLocalStorage === null ? [] : todoListLocalStorage;\n    todoList.push(todoObj);\n    localStorage.setItem(\"todo_guest_list\", JSON.stringify(todoList));\n    dispatch({\n      type: TODO_REDUCER_TYPE.TODO_SUCESS,\n      payload: todoList\n    });\n  };\n\n  /**\n   * To edit selected todo\n   * @param {*} id - Index of selected todo task\n   * @param {*} todoObj - Todo task object\n   */\n  const editTodoForGuest = (id, todoObj) => {\n    const newTodosList = [...todoState.todoList];\n    newTodosList[id] = todoObj;\n    toastInfo(`\"${todoObj.taskName}\" updated successfully`);\n    localStorage.setItem(\"todo_guest_list\", JSON.stringify(newTodosList));\n    dispatch({\n      type: TODO_REDUCER_TYPE.TODO_SUCESS,\n      payload: newTodosList\n    });\n  };\n\n  /**\n   * To delete selected todo\n   * @param {*} id - Index of selected todo task\n   */\n  const deleteTodoForGuest = id => {\n    const newTodosList = [...todoState.todoList];\n    if (window.confirm(`Are you sure you want to remove \"${newTodosList[id].taskName}\"`)) {\n      toastInfo(`\"${newTodosList[id].taskName}\" deleted successfully`);\n      newTodosList.splice(id, 1);\n      localStorage.setItem(\"todo_guest_list\", JSON.stringify(newTodosList));\n      dispatch({\n        type: TODO_REDUCER_TYPE.TODO_SUCESS,\n        payload: newTodosList\n      });\n    }\n  };\n\n  return (\n    <TodoContext.Provider\n      value={{\n        ...todoState,\n        getTodosList: getTodosList,\n        addTodoInList: addTodoInList,\n        editTodoInList: editTodoInList,\n        deleteCurrentTodo: deleteCurrentTodo,\n        clearData: clearData,\n        getTodoListForGuest: getTodoListForGuest,\n        addTodoForGuest: addTodoForGuest,\n        editTodoForGuest: editTodoForGuest,\n        deleteTodoForGuest: deleteTodoForGuest\n      }}\n    >\n      {children}\n    </TodoContext.Provider>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/404.8f8cdd4b.svg\";","// for toasts  \nimport { toast } from \"react-toastify\";\n\n// Config file\nimport { toastConfig } from \"../config\";\n\nexport const toastSuccess = (message) => {\n  toast.success(message, toastConfig)\n}\n\nexport const toastInfo = (message) => {\n  toast.info(message, toastConfig)\n}\n\nexport const toastWarning = (message) => {\n  toast.warn(message, toastConfig)\n}\n\nexport const toastError = (message) => {\n  toast.error(message, toastConfig)\n}\n\nexport const toastDefault = (message) => {\n  toast(message, toastConfig)\n}","import React, { useContext } from \"react\";\n\n// React router\nimport { Link, NavLink } from \"react-router-dom\";\n\n// Context\nimport { UserContext } from \"../../context/auth.context\";\n\n// Material UI\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst Header = () => {\n  const { user, isLoggedIn } = useContext(UserContext);\n    return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"lg\">\n        <Toolbar>\n          <Typography className=\"flex-1\" variant=\"h6\">\n            <Link className=\"decoration-none\" to=\"/\">Todo App</Link>\n          </Typography>\n          {isLoggedIn ? (\n            <>\n              <Avatar color=\"primary\">{user.email.charAt(0).toUpperCase()}</Avatar>\n              <Button color=\"inherit\" to=\"/sign-out\" component={NavLink} className=\"capitalize\">\n                Logout\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button color=\"inherit\" component={NavLink} to=\"/sign-in\" className=\"capitalize\">\n                Sign in\n              </Button>\n              <Button color=\"inherit\" component={NavLink} to=\"/sign-up\" className=\"capitalize\">\n                Sign up\n              </Button>\n            </>\n          )}\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React, { useContext } from \"react\";\n\n// React routing imports\nimport { Route, Redirect } from \"react-router-dom\";\n\n// Context\nimport { UserContext } from \"../../context/auth.context\";\n\n// Public route guard\nconst PublicRouter = ({ component: Component, token, ...rest }) => {\n  const { isLoggedIn } = useContext(UserContext);\n  \n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport default PublicRouter;\n","import React, { lazy, Suspense } from \"react\";\n\n// React routing imports\nimport { Switch, BrowserRouter, Route } from \"react-router-dom\";\n\n// Navigation component\nimport Header from \"../components/navigation/Header\";\n\n// Custom routing guard\nimport PublicRouter from \"../components/navigation/PublicRouter\";\n\n// 404 SVG\nimport NotFoundSVG from '../assets/svg/404.svg';\n\n// Public component\nconst Signin = lazy(() => import(\"../views/auth/signin\"));\nconst Signup = lazy(() => import(\"../views/auth/signup\"));\nconst Signout = lazy(() => import(\"../views/auth/signout\"));\n\n// Private route\nconst Home = lazy(() => import(\"../views/home\"));\n\n// Scss Loader\nconst Loader = _ => (\n  <div className=\"full-page-center \">\n    <div className=\"ripple-loader\">\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n);\n\n// 404 Page\nconst PageNotFound = _ => (\n  <div className=\"not-found-page\" style={{ backgroundImage: `url(${NotFoundSVG})` }}>\n    <h1>Page not found</h1> \n  </div>\n);\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          <PublicRouter path=\"/sign-up\" component={Signup} exact={true} />\n          <PublicRouter path=\"/sign-in\" component={Signin} exact={true} />\n          <Route path=\"/sign-out\" component={Signout} exact={true} />\n          <Route path=\"/\" component={Home} exact={true} />\n          <Route component={PageNotFound} />\n        </Switch>\n      </Suspense>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\n\n// Routing paths\nimport Routes from \"./routes\";\n\n// Toast\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// Material UI\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport BlueGrey from \"@material-ui/core/colors/blueGrey\";\nimport LightGreen from \"@material-ui/core/colors/lightGreen\";\n\nconst App = () => {\n  // Custom theme\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        light: BlueGrey[300],\n        main: BlueGrey[500],\n        dark: BlueGrey[700]\n      },\n      secondary: {\n        light: LightGreen[300],\n        main: LightGreen[500],\n        dark: LightGreen[700]\n      },\n      type: \"light\"\n    }\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Routes />\n      <ToastContainer />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Context Provider\nimport { UserContextProvider } from \"./context/auth.context\";\nimport { TodoContextProvider } from \"./context/todos.context\";\n\nReactDOM.render(\n  <UserContextProvider>\n    <TodoContextProvider>\n      <App />\n    </TodoContextProvider>\n  </UserContextProvider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}